#!/usr/bin/env perl 
use strict;

# Picks QM atoms based on distance from a specified atom index


if (scalar(@ARGV) != 3) {
  die "Usage: pick_qm_region <input .xyz>  <atom index>  <distance (in same units as xyz file)>\n";
}

my $file = shift;
my $idx = shift; $idx--;
my $cutoff = shift;

# Read in xyz coordinates
open (IN, "$file") or die "Can't read file $file: $!\n";

my $NAtoms = <IN>; chomp($NAtoms);
my $Comment = <IN>; chomp($Comment);

my @AXYZ;
while (<IN>) 
{
  my @tmp = split(" ", $_);
  
  my $sym = $tmp[0];
  my $x = $tmp[1];
  my $y = $tmp[2];
  my $z = $tmp[3];
    
  push(@AXYZ, $sym);
  push(@AXYZ, $x);
  push(@AXYZ, $y);
  push(@AXYZ, $z);
}

close IN;


# Get coordinates of specified atom
my $X0 = $AXYZ[4*$idx + 1];
my $Y0 = $AXYZ[4*$idx + 2];
my $Z0 = $AXYZ[4*$idx + 3];
my $cutoff2 = $cutoff ** 2.0;

# Determine all atoms within cutoff radius
my @QMatoms;
push(@QMatoms, $idx+1);
for (my $atm = 0; $atm < $NAtoms; $atm++) {
  my $off = 4 * $atm;
  my $sym = $AXYZ[$off];
  my $x = $AXYZ[$off + 1];
  my $y = $AXYZ[$off + 2];
  my $z = $AXYZ[$off + 3];
  #printf("atm = %6d:    %16.8f    %16.8f   %16.8f\n",
  #  $atm,$x,$y,$z);

  my $r2 = ($x-$X0)**2.0 + ($y-$Y0)**2.0 + ($z-$Z0)**2.0;
  #print "atm = $atm:    r2 = $r2\n";
  if ($r2 <= $cutoff2) {
    push(@QMatoms, $atm+1);
  }
}

print "@QMatoms\n";
