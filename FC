#!/bin/bash
#   Generated by ./generatecompilers.sh. Do NOT edit!
#
# Check whether a suitable environment is defined (ie. module load env is called)
# TODO: implement "better" logic to check this
if [ -z "$SAMWRAP_FC" ] ; then
    echo "error: No suitable compiler environment found."
    exit 1
fi

help () {
    cat <<EOD
  This is the SAM compiler wrapper for the FORTRAN language.
  Call with -show, -showme:link or -showme:compile arguments to see how the compiler is run.
EOD
}

args="$@"
if [ $# == 0 ]; then
    echo "error: no arguments specified."
    help
    exit 1
fi

link () {
    echo $args | awk '/([[:blank:]]|^)-[cES]([[:space:]]|$)/{ exit 1;}'
}

showme () {
    #   echo $args | awk '{ match( $0,  /([[:blank:]]|^)-showme:([a-z]+)([[:space:]]|$)/, a ); print a[2]; }'
    #   echo $args | awk '/([[:blank:]]|^)-show([[:space:]]|$)/ { print "show"; }'
    echo $args | awk '/([[:blank:]]|^)-show/ {
                          if ( match( $0,  /-show(me)?:([a-z]+)/, a ) ) print a[2];
                          else print "show";
                      }'
}

case $(showme) in
    compile ) echo $SAMWRAP_FC_FLAGS $SAMWRAP_FLAGS; exit 0;; 
    link    ) echo $SAMWRAP_FC_LDFLAGS  $SAMWRAP_LDFLAGS ; exit 0;;
    incdirs ) IFS=: ; echo $CPATH ; exit 0;;
    libdirs ) IFS=: ; echo $LIBRARY_PATH ; exit 0;;
    show    ) echo $SAMWRAP_FC $SAMWRAP_FC_FLAGS $SAMWRAP_FLAGS $SAMWRAP_FC_LDFLAGS $SAMWRAP_LDFLAGS ; exit 0 ;;
esac

if link ; then 
    $SAMWRAP_FC $SAMWRAP_FC_FLAGS $SAMWRAP_FLAGS "$@" $SAMWRAP_FC_LDFLAGS $SAMWRAP_LDFLAGS
else
    $SAMWRAP_FC $SAMWRAP_FC_FLAGS $SAMWRAP_FLAGS "$@"
fi
